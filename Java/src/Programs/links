public GlobalSearchPage sortingSearchColumns(String searchLists, String columnName, String dbColumn, String sortOrder) {
    String sortedValueUI = null;

    pause(2000);

    WebElement sortColumn = locateElement(Locators.XPATH, "//div[@col-id='" + columnName + "' and @role='columnheader']");

    List<WebElement> columnData = locateElements(Locators.XPATH, "//div[@col-id='" + columnName + "']//span[@class='ag-cell-value']");

    for (WebElement sortData : columnData) {
        sortedValueUI = sortData.getText();
        System.out.println(sortedValueUI);
        break;
    }

    String valuesFromDB = getDBValues(searchLists, dbColumn, sortOrder);
    System.out.println(valuesFromDB);

    // Remove "AM"/"PM" and fractional seconds properly
    sortedValueUI = sortedValueUI.replace(" AM", "").replace(" PM", "");
    if (sortedValueUI.contains(".")) {
        sortedValueUI = sortedValueUI.split("\\.")[0];
    }

    valuesFromDB = valuesFromDB.replace("AM", "").replace("PM", "");
    if (valuesFromDB.contains(".")) {
        valuesFromDB = valuesFromDB.split("\\.")[0];
    }

    // Define the correct date format
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM/dd/yyyy h:mm:ss");

    // Parse the date strings into LocalDateTime objects
    LocalDateTime dateUI = LocalDateTime.parse(sortedValueUI, formatter);
    LocalDateTime dateDB = LocalDateTime.parse(valuesFromDB, formatter);

    // Compare the dates
    if (dateUI.equals(dateDB)) {
        reportStep("Column " + columnName + " sorted in " + sortOrder + " order", "pass");
    } else {
        sortColumn.click();
        pause(2000);

        // Re-fetch the sorted value from the UI after clicking the sort column
        columnData = locateElements(Locators.XPATH, "//div[@col-id='" + columnName + "']//span[@class='ag-cell-value']");

        for (WebElement sortData : columnData) {
            sortedValueUI = sortData.getText();
            System.out.println(sortedValueUI);
            break;
        }

        sortedValueUI = sortedValueUI.replace(" AM", "").replace(" PM", "");
        if (sortedValueUI.contains(".")) {
            sortedValueUI = sortedValueUI.split("\\.")[0];
        }

        dateUI = LocalDateTime.parse(sortedValueUI, formatter);

        if (dateUI.equals(dateDB)) {
            reportStep("Column " + columnName + " sorted in " + sortOrder + " order", "pass");
        } else {
            reportStep("Column " + columnName + " not sorted in " + sortOrder + " order", "fail");
        }
    }

    return this;
}