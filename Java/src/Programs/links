import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import java.time.Duration;

public class GlobalSearchPage {

    WebDriver driver;
    WebDriverWait wait;

    public GlobalSearchPage(WebDriver driver) {
        this.driver = driver;
        this.wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    }

    public GlobalSearchPage sortingSearchColumns(String columnName) {
        try {
            // Locate the sort column element
            String xpath = "//div[@col-id='" + columnName + "' and @role='columnheader']";
            WebElement sortColumn = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(xpath)));

            // Click the sort column to sort
            sortColumn.click();

            // Check for sort direction
            boolean isAscending = false;
            boolean isDescending = false;

            // Check for ascending icon
            if (sortColumn.findElements(By.xpath(".//span[contains(@class,'ag-sort-ascending-icon') and @role='presentation']")).size() > 0) {
                isAscending = true;
            }

            // Check for descending icon
            if (sortColumn.findElements(By.xpath(".//span[contains(@class,'ag-sort-descending-icon') and @role='presentation']")).size() > 0) {
                isDescending = true;
            }

            // Log the sort order
            if (isAscending) {
                System.out.println("Column sorted in ascending order");
            } else if (isDescending) {
                System.out.println("Column sorted in descending order");
            } else {
                System.out.println("No sort indicator found for the column: " + columnName);
            }

        } catch (TimeoutException te) {
            System.out.println("Timeout while waiting for the column: " + columnName);
        } catch (NoSuchElementException ne) {
            System.out.println("Column not found: " + columnName);
        } catch (Exception e) {
            System.out.println("Unexpected error: " + e.getMessage());
        }

        return this;
    }
}